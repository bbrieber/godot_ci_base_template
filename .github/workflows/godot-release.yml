#on: [push]

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release Composite

env:
  GodotProjectName: GodotProject
  ExportLinux: true
  ExportWindows: true
  ExportWeb: true

jobs:
  prepare_release:
    name: Create Godot Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        if: ${{ inputs.upload_release }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build_release:
    needs: prepare_release
    name: Build Godot Release
    runs-on: ubuntu-latest
    steps:
      - name: Before
        run: |
          echo "Before Run"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build for Windows
        uses: bbrieber/godot_build_release@main
        with:
          godot_project_name: 'GodotProject'
          godot_build_config: 'windows'
          upload_release: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      - name: Build for Linux
        uses: bbrieber/godot_build_release@main
        with:
          godot_project_name: 'GodotProject'
          godot_build_config: 'linux'
          upload_release: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      - name: Build for Web
        uses: bbrieber/godot_build_release@main
        with:
          godot_project_name: 'GodotProject'
          godot_build_config: 'web'
          upload_release: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      - name: After
        run: |
          echo "After Run"
